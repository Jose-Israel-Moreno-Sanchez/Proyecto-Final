/**
 * üì¶ recuperar.js
 * 
 * Descripci√≥n:
 * Este archivo maneja la l√≥gica de recuperaci√≥n de contrase√±a en TianguiStore. 
 * Permite al usuario ingresar su correo electr√≥nico para recibir un enlace de recuperaci√≥n si el correo est√° registrado en el sistema.
 * Realiza validaciones del correo electr√≥nico y maneja los mensajes de error y √©xito en la interfaz.
 * 
 * Funciones:
 * - Validaci√≥n del correo electr√≥nico.
 * - Env√≠o del correo de recuperaci√≥n al backend.
 * - Manejo de mensajes de error y √©xito.
 * 
 * Autor: I.S.C. Erick Renato Vega Ceron
 * Fecha de Creaci√≥n: Mayo 2025
 */

document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("recuperarForm");
  const emailInput = document.getElementById("email");
  const mensajeError = document.getElementById("mensajeError");
  const mensajeExito = document.getElementById("mensajeExito");

  // Evento de env√≠o del formulario
  form.addEventListener("submit", async (e) => {
    e.preventDefault(); // Prevenir la recarga de la p√°gina

    ocultarMensajes(); // Ocultar mensajes previos

    const email = emailInput.value.trim(); // Obtener el valor del campo de correo
    const regexCorreo = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; // Expresi√≥n regular para validar el correo

    // Validar el correo electr√≥nico
    if (!regexCorreo.test(email)) {
      emailInput.classList.add("is-invalid"); // A√±adir clase para mostrar error en el campo
      mostrarError("‚ùå Correo electr√≥nico no v√°lido."); // Mostrar mensaje de error
      return;
    }

    // Enviar solicitud al backend para la recuperaci√≥n de la contrase√±a
    try {
      const res = await fetch("/auth/recuperar", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ correo_electronico: email }) // Enviar correo como cuerpo de la solicitud
      });

      const data = await res.json(); // Parsear la respuesta JSON

      // Manejar respuesta del servidor
      if (!res.ok) {
        mostrarError(data.message || "‚ùå No se pudo enviar el correo."); // Mostrar error si la respuesta no es OK
        return;
      }

      mostrarExito("üì© Se ha enviado un enlace de recuperaci√≥n si el correo est√° registrado."); // Mostrar √©xito
    } catch (err) {
      console.error("‚ùå Error en recuperaci√≥n:", err);
      mostrarError("‚ùå Error al conectar con el servidor."); // Mostrar error si la solicitud falla
    }
  });

  // Funci√≥n para mostrar mensaje de error
  function mostrarError(msg) {
    mensajeError.textContent = msg;
    mensajeError.classList.remove("d-none"); // Mostrar el mensaje de error
  }

  // Funci√≥n para mostrar mensaje de √©xito
  function mostrarExito(msg) {
    mensajeExito.textContent = msg;
    mensajeExito.classList.remove("d-none"); // Mostrar el mensaje de √©xito
  }

  // Funci√≥n para ocultar los mensajes de error y √©xito
  function ocultarMensajes() {
    mensajeError.classList.add("d-none"); // Ocultar mensaje de error
    mensajeExito.classList.add("d-none"); // Ocultar mensaje de √©xito
    emailInput.classList.remove("is-invalid"); // Eliminar la clase de error del campo de correo
  }
});
